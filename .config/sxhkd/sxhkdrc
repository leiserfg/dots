#
# wm independent hotkeys
#
# terminal emulator
super + Return
	cd $(xcwd); $TERMCMD

super + slash
	$BROWSER

# add gaps between windows
super + {minus,equal}
        bspc config -n focused window_gap $(($(bspc config -n focused window_gap) {-,+} 3))

# program launcher
super + d
        rofi -combi-modi window,drun,ssh -show combi -modi combi -show-icons

# make sxhkd reload its configuration files:
super + r
        sh ~/.config/bspwm/bspwmrc

super + {_,shift +,ctrl +} + @Print
  scrot {_,-u,-s} -e "notify-send -i image 'scrot' 'image saved as \n\$f'" -q 100
#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + f
    state=fullscreen; \
    bspc query -N -n "focused.$state" && state=$(bspc query -T -n | jq -r .client.lastState); \
    bspc node -t $state

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused


#Balance focused (usually a parent)
super + b
        bspc node -B

#Tilt focused (usually parent)
super + t
        bspc node -R 90

# zoom (swap to biggest window)
super + z
        bspc node -s biggest.local

#
# state/flags
#

# set the window state
super + {t,shift + t,s}
	bspc node -t {tiled,pseudo_tiled,floating}

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,a,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + shift + {1-9}
	bspc node -d '^{1-9}'

super + {1-9}
        focused_desktop=$(bspc query -d focused -D);\
        target_desktop=$(bspc query -d ^{1-9} -D);\
        bspc desktop -f $([ $focused_desktop = $target_desktop ] && echo "last" || echo $target_desktop)

super + 0
        rofi_power
#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p \~{west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# multimedia
XF86AudioMute 
       pactl set-sink-mute @DEFAULT_SINK@ toggle

XF86AudioRaiseVolume  
       pactl set-sink-volume @DEFAULT_SINK@ +5%; notify-send 'Volume up'

XF86AudioLowerVolume  
       pactl set-sink-volume @DEFAULT_SINK@ -5%; notify-send 'Volume down'

XF86MonBrightnessUp 
       xbacklight -inc 10 

XF86MonBrightnessDown 
       xbacklight -dec 10 

XF86Search
       xdotool key Num_Lock
